{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./components/Device/Device.js","webpack:///./components/Tv/Tv.js","webpack:///./components/Light/Light.js","webpack:///./components/Air Conditioning/AirConditioning.js","webpack:///./src/index.js","webpack:///./components/Smart House/SmartHouse.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Device","[object Object]","this","_name","_isEnabled","isEnabledStatus","Tv_Tv","super","_sources","_currentChannel","_minChannelValue","_maxChannelValue","_currentVolume","_minVolume","_maxVolume","source","currentSource","_currentSource","indexOf","currentChannel","channel","currentVolume","RenderTV","tv","rootElement","SmartHouse","_tv","_rootElement","tvContainer","document","createElement","className","tvControlsContainer","powerControls","tvVolumeControls","tvChannelControls","deviceName","innerText","getHumanizedName","state","switchState","setDeviceOn","type","innerHTML","addEventListener","setDeviceOff","decreaseVolume","increaseVolume","decreaseChannel","increaseChannel","deleteDeviceButton","deleteDeviceByName","remove","showCurrentVolume","showCurrentChannel","appendChild","Light_Light","_currentColorTemperature","_minColorTemperature","_maxColorTemperature","_currentBrightness","_minBrightness","_maxBrightness","currentColorTemperature","minColorTemperature","maxColorTemperature","currentBrightness","AirConditioning_AirConditioning","config","_mode","_currentTemperature","_minTemperature","_maxTemperature","_currentFanSpeed","_minFanSpeed","_maxFanSpeed","fanSpeed","currentMode","_currentMode","currentTemperature","temperature","currentFanSpeed","speed","RenderAC","airConditioning","smartHouse","_airConditioning","airCondContainer","airCondControlsContainer","acTemperatureControls","acFanControls","decreaseTemperature","increaseTemperature","decreaseFanSpeed","increaseFanSpeed","showCurrentTemperature","showCurrentFanSpeed","house","address","owner","_address","_owner","_devices","Map","_register","register","device","getDeviceName","set","has","Error","alert","confirmQuestion","confirm","delete","clear","registerDevice","root","getElementById","select","setAttribute","devices","defaultOption","text","add","option","inputField","buttonAddDevice","selectIndex","options","selectedIndex","currentOption","newTV","addNewDevice","render","newLight","newAirConditioning"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export class Device {\n  constructor(name) {\n    this._name = name;\n    this._isEnabled = false;\n  }\n  get name() {\n    return (this._name = name);\n  }\n\n  get isEnabledStatus() {\n    return this._isEnabled;\n  }\n\n  setDeviceOn() {\n    if (!this._isEnabled) {\n      this._isEnabled = true;\n    }\n  }\n  setDeviceOff() {\n    if (this._isEnabled) {\n      this._isEnabled = false;\n    }\n  }\n}\n","import { Device } from \"../Device/Device\";\n\nexport class Tv extends Device {\n  constructor(name) {\n    super(name);\n    this._name = name;\n    this._sources = [\"TV antenna\", \"HDMI\", \"USB\", \"PC\"];\n    this._currentChannel = 1;\n    this._minChannelValue = 1;\n    this._maxChannelValue = 100;\n    this._currentVolume = 10;\n    this._minVolume = 0;\n    this._maxVolume = 50;\n  }\n\n  static getDeviceName() {\n    return \"tv-set\";\n  }\n\n  static getHumanizedName() {\n    return \"TV-Set Device\";\n  }\n\n  getHumanizedName() {\n    return \"TV-Set\";\n  }\n\n  get source() {\n    return this._sources;\n  }\n\n  get currentSource() {\n    return this._currentSource;\n  }\n  setSource(source) {\n    if (this._sources.indexOf(source) !== -1) {\n      this._currentSource = source;\n    }\n  }\n  get currentChannel() {\n    return this._currentChannel;\n  }\n  set currentChannel(channel) {\n    if (channel >= this._minChannelValue && channel <= this._maxChannelValue) {\n      this._currentChannel = channel;\n    }\n  }\n  increaseChannel() {\n    this._currentChannel++;\n    if (this._currentChannel > this._maxChannelValue) {\n      this._currentChannel = 1;\n    }\n  }\n  decreaseChannel() {\n    this._currentChannel--;\n    if (this._currentChannel < this._minChannelValue) {\n      this._currentChannel = 100;\n    }\n  }\n  get currentVolume() {\n    return this._currentVolume;\n  }\n\n  set currentVolume(value) {\n    if (value > this._minVolume && value < this._maxVolume) {\n      this._currentVolume = value;\n    }\n  }\n\n  increaseVolume() {\n    if (this._currentVolume < this._maxVolume) {\n      this._currentVolume++;\n    }\n  }\n  decreaseVolume() {\n    if (this._currentVolume > this._minVolume) {\n      this._currentVolume--;\n    }\n  }\n}\n\nexport class RenderTV {\n  constructor(tv, rootElement, SmartHouse) {\n    this._tv = tv;\n    this._rootElement = rootElement;\n    this.SmartHouse = SmartHouse;\n  }\n\n  render() {\n    const tvContainer = document.createElement(\"div\");\n    tvContainer.className = \"tv\";\n\n    const tvControlsContainer = document.createElement(\"div\");\n    tvControlsContainer.className = \"tv__controls\";\n\n    const powerControls = document.createElement(\"div\");\n    powerControls.className = \"tv__controls-power\";\n\n    const tvVolumeControls = document.createElement(\"div\");\n    tvVolumeControls.className = \"tv__controls-volume\";\n\n    const tvChannelControls = document.createElement(\"div\");\n    tvChannelControls.className = \"tv__controls-channel\";\n\n    let deviceName = document.createElement(\"div\");\n    deviceName.innerText = `Device name: ${\n      this._tv._name\n    } - ${this._tv.getHumanizedName()}`;\n\n    let state = document.createElement(\"div\");\n    state.className = \"stateField\";\n    let switchState = () => {\n      state.innerText = `Device status: ${\n        this._tv.isEnabledStatus ? \"On\" : \"Off\"\n      }`;\n    };\n\n    const setDeviceOn = document.createElement(\"button\");\n    setDeviceOn.className = \"tv__controls-power-on-btn button\";\n    setDeviceOn.type = \"button\";\n    setDeviceOn.innerHTML = \"ON\";\n    setDeviceOn.addEventListener(\"click\", () => {\n      this._tv.setDeviceOn();\n      switchState();\n    });\n\n    const setDeviceOff = document.createElement(\"button\");\n    setDeviceOff.className = \"tv__controls-power-off-btn button\";\n    setDeviceOff.type = \"button\";\n    setDeviceOff.innerHTML = \"OFF\";\n    setDeviceOff.addEventListener(\"click\", () => {\n      this._tv.setDeviceOff();\n      switchState();\n    });\n\n    let currentVolume = document.createElement(\"div\");\n    let showCurrentVolume = () => {\n      currentVolume.innerText = `Volume: ${this._tv.currentVolume}`;\n    };\n\n    const decreaseVolume = document.createElement(\"button\");\n    decreaseVolume.className = \"decrease_volume button\";\n    decreaseVolume.type = \"button\";\n    decreaseVolume.innerHTML = \" vol-\";\n    decreaseVolume.addEventListener(\"click\", () => {\n      if (this._tv.isEnabledStatus === true) {\n        this._tv.currentVolume = this._tv.decreaseVolume();\n        currentVolume.innerText = `Volume: ${this._tv.currentVolume}`;\n      }\n    });\n\n    const increaseVolume = document.createElement(\"button\");\n    increaseVolume.className = \"decrease_volume button\";\n    increaseVolume.type = \"button\";\n    increaseVolume.innerHTML = \"vol+\";\n    increaseVolume.addEventListener(\"click\", () => {\n      if (this._tv.isEnabledStatus === true) {\n        this._tv.currentVolume = this._tv.increaseVolume();\n        currentVolume.innerText = `Volume: ${this._tv.currentVolume}`;\n      }\n    });\n\n    let currentChannel = document.createElement(\"div\");\n    let showCurrentChannel = () => {\n      currentChannel.innerText = `Channel: ${this._tv.currentChannel}`;\n    };\n\n    const decreaseChannel = document.createElement(\"button\");\n    decreaseChannel.className = \"decrease_channel button\";\n    decreaseChannel.type = \"button\";\n    decreaseChannel.innerHTML = \"ch-\";\n    decreaseChannel.addEventListener(\"click\", () => {\n      if (this._tv.isEnabledStatus === true) {\n        this._tv.currentChannel = this._tv.decreaseChannel();\n        currentChannel.innerText = `Channel: ${this._tv.currentChannel}`;\n      }\n    });\n\n    const increaseChannel = document.createElement(\"button\");\n    increaseChannel.className = \"decrease_channel button\";\n    increaseChannel.type = \"button\";\n    increaseChannel.innerHTML = \"ch+\";\n    increaseChannel.addEventListener(\"click\", () => {\n      if (this._tv.isEnabledStatus === true) {\n        this._tv.currentChannel = this._tv.increaseChannel();\n        currentChannel.innerText = `Channel: ${this._tv.currentChannel}`;\n      }\n    });\n\n    const deleteDeviceButton = document.createElement(\"button\");\n    deleteDeviceButton.className = \"delete_device-btn button\";\n    deleteDeviceButton.innerHTML = \"Delete Device\";\n    deleteDeviceButton.addEventListener(\"click\", () => {\n      this.SmartHouse.deleteDeviceByName(this._tv._name);\n      tvContainer.remove();\n    });\n\n    switchState();\n    showCurrentVolume();\n    showCurrentChannel();\n    tvContainer.appendChild(deviceName);\n\n    powerControls.appendChild(state);\n    powerControls.appendChild(setDeviceOn);\n    powerControls.appendChild(setDeviceOff);\n\n    tvVolumeControls.appendChild(currentVolume);\n    tvVolumeControls.appendChild(decreaseVolume);\n    tvVolumeControls.appendChild(increaseVolume);\n\n    tvChannelControls.appendChild(currentChannel);\n    tvChannelControls.appendChild(decreaseChannel);\n    tvChannelControls.appendChild(increaseChannel);\n\n    tvControlsContainer.appendChild(powerControls);\n    tvControlsContainer.appendChild(tvVolumeControls);\n    tvControlsContainer.appendChild(tvChannelControls);\n\n    tvContainer.appendChild(tvControlsContainer);\n    tvContainer.appendChild(deleteDeviceButton);\n\n    this._rootElement.appendChild(tvContainer);\n  }\n}\n","import { Device } from \"../Device/Device\";\n\nexport class Light extends Device {\n  constructor(name) {\n    super(name);\n    this._currentColorTemperature = 3000;\n    this._minColorTemperature = 2000;\n    this._maxColorTemperature = 6500;\n    this._currentBrightness = 5;\n    this._minBrightness = 1;\n    this._maxBrightness = 10;\n  }\n\n  static getDeviceName() {\n    return \"light\";\n  }\n\n  static getHumanizedName() {\n    return \"Light Device\";\n  }\n\n  get currentColorTemperature() {\n    return this._currentColorTemperature;\n  }\n  get minColorTemperature() {\n    return this._minColorTemperature;\n  }\n  get maxColorTemperature() {\n    return this._maxColorTemperature;\n  }\n  increaseColorTemperature() {\n    if (this._currentColorTemperature < this._maxColorTemperature) {\n      this._currentColorTemperature++;\n    }\n  }\n  decreaseColorTemperature() {\n    if (this._currentColorTemperature > this._minColorTemperature) {\n      this._currentColorTemperature--;\n    }\n  }\n  get currentBrightness() {\n    return this._currentBrightness;\n  }\n  increaseBrightness() {\n    if (this._currentBrightness < this._maxBrightness) {\n      this._currentBrightness++;\n    }\n  }\n  decreaseBrightness() {\n    if (this._currentBrightness > this._minBrightness) {\n      this._currentBrightness--;\n    }\n  }\n  setNightMode() {\n    this._currentColorTemperature = 6500;\n    this._currentBrightness = 1;\n  }\n}\n","import { Device } from \"../Device/Device\";\n\nexport class AirConditioning extends Device {\n  constructor(name, config) {\n    super(name);\n    this._name = name;\n    this._mode = [\"COOL\", \"HEAT\", \"DRY\", \"FAN\"];\n    this._currentTemperature = 20;\n    this._minTemperature = 15;\n    this._maxTemperature = 30;\n    this._currentFanSpeed = 3;\n    this._minFanSpeed = 1;\n    this._maxFanSpeed = 5;\n  }\n\n  static getDeviceName() {\n    //\n    return \"air_conditioning\";\n  }\n\n  static getHumanizedName() {\n    return \"Air Conditioning Device\";\n  }\n\n  getHumanizedName() {\n    return \"Air Conditioning\";\n  }\n\n  get fanSpeed() {\n    return this._currentFanSpeed;\n  }\n\n  get currentMode() {\n    return this._currentMode;\n  }\n  setSource(source) {\n    if (this._mode.indexOf(source) !== -1) {\n      this._currentMode = source;\n    }\n  }\n\n  get currentTemperature() {\n    return this._currentTemperature;\n  }\n\n  set currentTemperature(temperature) {\n    if (\n      temperature > this._minTemperature &&\n      temperature < this._maxTemperature\n    ) {\n      this._currentTemperature = temperature;\n    }\n  }\n\n  increaseTemperature() {\n    if (this._currentTemperature < this._maxTemperature) {\n      this._currentTemperature++;\n    }\n  }\n  decreaseTemperature() {\n    if (this._currentTemperature > this._minTemperature) {\n      this._currentTemperature--;\n    }\n  }\n  get currentFanSpeed() {\n    return this._currentFanSpeed;\n  }\n\n  set currentFanSpeed(speed) {\n    if (speed > this._minFanSpeed && speed < this._maxFanSpeed) {\n      this._currentFanSpeed = speed;\n    }\n  }\n\n  increaseFanSpeed() {\n    if (this._currentFanSpeed < this._maxFanSpeed) {\n      this._currentFanSpeed++;\n    }\n  }\n  decreaseFanSpeed() {\n    if (this._currentFanSpeed > this._minFanSpeed) {\n      this._currentFanSpeed--;\n    }\n  }\n}\n\nexport class RenderAC {\n  constructor(airConditioning, rootElement, smartHouse) {\n    this._airConditioning = airConditioning;\n    this._rootElement = rootElement;\n    this.smartHouse = smartHouse;\n  }\n\n  render() {\n    const airCondContainer = document.createElement(\"div\");\n    airCondContainer.className = \"ac\";\n\n    const airCondControlsContainer = document.createElement(\"div\");\n    airCondControlsContainer.className = \"ac__controls\";\n\n    const powerControls = document.createElement(\"div\");\n    powerControls.className = \"ac__controls-power\";\n\n    const acTemperatureControls = document.createElement(\"div\");\n    acTemperatureControls.className = \"ac__controls-volume\";\n\n    const acFanControls = document.createElement(\"div\");\n    acFanControls.className = \"ac__controls-channel\";\n\n    let deviceName = document.createElement(\"div\");\n    deviceName.innerText = `Device name: ${\n      this._airConditioning._name\n    } - ${this._airConditioning.getHumanizedName()}`;\n\n    let state = document.createElement(\"div\");\n    state.className = \"stateField\";\n    let switchState = () => {\n      state.innerText = `Device status: ${\n        this._airConditioning.isEnabledStatus ? \"On\" : \"Off\"\n      }`;\n    };\n\n    const setDeviceOn = document.createElement(\"button\");\n    setDeviceOn.className = \"ac__controls-power-on-btn button\";\n    setDeviceOn.type = \"button\";\n    setDeviceOn.innerHTML = \"ON\";\n    setDeviceOn.addEventListener(\"click\", () => {\n      this._airConditioning.setDeviceOn();\n      switchState();\n    });\n\n    const setDeviceOff = document.createElement(\"button\");\n    setDeviceOff.className = \"ac__controls-power-off-btn button\";\n    setDeviceOff.type = \"button\";\n    setDeviceOff.innerHTML = \"OFF\";\n    setDeviceOff.addEventListener(\"click\", () => {\n      this._airConditioning.setDeviceOff();\n      switchState();\n    });\n\n    let currentTemperature = document.createElement(\"div\");\n    let showCurrentTemperature = () => {\n      currentTemperature.innerText = `Temperature: ${\n        this._airConditioning.currentTemperature\n      }`;\n    };\n\n    const decreaseTemperature = document.createElement(\"button\");\n    decreaseTemperature.className = \"decrease_temp-btn button\";\n    decreaseTemperature.type = \"button\";\n    decreaseTemperature.innerHTML = \"temp-\";\n    decreaseTemperature.addEventListener(\"click\", () => {\n      if (this._airConditioning.isEnabledStatus === true) {\n        this._airConditioning.currentTemperature = this._airConditioning.decreaseTemperature();\n        currentTemperature.innerText = `Temperature: ${\n          this._airConditioning.currentTemperature\n        }`;\n      }\n    });\n\n    const increaseTemperature = document.createElement(\"button\");\n    increaseTemperature.className = \"decrease_volume button\";\n    increaseTemperature.type = \"button\";\n    increaseTemperature.innerHTML = \"temp+\";\n    increaseTemperature.addEventListener(\"click\", () => {\n      if (this._airConditioning.isEnabledStatus === true) {\n        this._airConditioning.currentTemperature = this._airConditioning.increaseTemperature();\n        currentTemperature.innerText = `Temperature: ${\n          this._airConditioning.currentTemperature\n        }`;\n      }\n    });\n\n    let currentFanSpeed = document.createElement(\"div\");\n    let showCurrentFanSpeed = () => {\n      currentFanSpeed.innerText = `Fan Speed: ${\n        this._airConditioning.currentFanSpeed\n      }`;\n    };\n\n    const decreaseFanSpeed = document.createElement(\"button\");\n    decreaseFanSpeed.className = \"decrease_channel button\";\n    decreaseFanSpeed.type = \"button\";\n    decreaseFanSpeed.innerHTML = \"sp-\";\n    decreaseFanSpeed.addEventListener(\"click\", () => {\n      if (this._airConditioning.isEnabledStatus === true) {\n        this._airConditioning.currentFanSpeed = this._airConditioning.decreaseFanSpeed();\n        currentFanSpeed.innerText = `Fan Speed: ${\n          this._airConditioning.currentFanSpeed\n        }`;\n      }\n    });\n\n    const increaseFanSpeed = document.createElement(\"button\");\n    increaseFanSpeed.className = \"decrease_channel button\";\n    increaseFanSpeed.type = \"button\";\n    increaseFanSpeed.innerHTML = \"sp+\";\n    increaseFanSpeed.addEventListener(\"click\", () => {\n      if (this._airConditioning.isEnabledStatus === true) {\n        this._airConditioning.currentFanSpeed = this._airConditioning.increaseFanSpeed();\n        currentFanSpeed.innerText = `Fan Speed: ${\n          this._airConditioning.currentFanSpeed\n        }`;\n      }\n    });\n\n    const deleteDeviceButton = document.createElement(\"button\");\n    deleteDeviceButton.className = \"delete_device-btn button\";\n    deleteDeviceButton.innerHTML = \"Delete Device\";\n    deleteDeviceButton.addEventListener(\"click\", () => {\n      this.smartHouse.deleteDeviceByName(this._airConditioning._name);\n      airCondContainer.remove();\n    });\n\n    switchState();\n    showCurrentTemperature();\n    showCurrentFanSpeed();\n    airCondContainer.appendChild(deviceName);\n\n    powerControls.appendChild(state);\n    powerControls.appendChild(setDeviceOn);\n    powerControls.appendChild(setDeviceOff);\n\n    acTemperatureControls.appendChild(currentTemperature);\n    acTemperatureControls.appendChild(decreaseTemperature);\n    acTemperatureControls.appendChild(increaseTemperature);\n\n    acFanControls.appendChild(currentFanSpeed);\n    acFanControls.appendChild(decreaseFanSpeed);\n    acFanControls.appendChild(increaseFanSpeed);\n\n    airCondControlsContainer.appendChild(powerControls);\n    airCondControlsContainer.appendChild(acTemperatureControls);\n    airCondControlsContainer.appendChild(acFanControls);\n\n    airCondContainer.appendChild(airCondControlsContainer);\n    airCondContainer.appendChild(deleteDeviceButton);\n\n    this._rootElement.appendChild(airCondContainer);\n  }\n}\n","import {\n  SmartHouse,\n  SmartHouseRender\n} from \"../components/Smart House/SmartHouse\";\nimport { AirConditioning } from \"../components/Air Conditioning/AirConditioning\";\nimport { Tv } from \"../components/Tv/Tv\";\nimport { Light } from \"../components/Light/Light\";\nimport \"./index.scss\";\n\nconst house = new SmartHouse(\"my house\", \"NY, 5th AV\", \"Oleg Shynkarenko\");\nhouse.registerDevice(Tv);\nhouse.registerDevice(Light);\nhouse.registerDevice(AirConditioning);\n\nconst smartHouseView = new SmartHouseRender(house);\nsmartHouseView.render();\n","import { RenderTV, Tv } from \"../Tv/Tv\";\nimport { Light } from \"../Light/Light\";\nimport { AirConditioning, RenderAC } from \"../Air Conditioning/AirConditioning\";\n\nexport class SmartHouse {\n  constructor(name, address, owner) {\n    this._name = name;\n    this._address = address;\n    this._owner = owner;\n    this._devices = new Map();\n    this._register = new Map();\n  }\n\n  get name() {\n    return this._name;\n  }\n  get address() {\n    return this._address;\n  }\n  get owner() {\n    return this._owner;\n  }\n\n  get register() {\n    return this._register;\n  }\n\n  registerDevice(device) {\n    // Get Class like Light / Tv / AirConditioning\n    const name = device.getDeviceName();\n    this._register.set(name, device);\n  }\n\n  addNewDevice(device) {\n    if (this._devices.has(device._name) === false && device._name) {\n      this._devices.set(device._name, device);\n    } else {\n      throw new Error(\n        alert(\n          `This device has been already added or you didn't enter device name`\n        )\n      );\n    }\n  }\n  deleteDeviceByName(name) {\n    let confirmQuestion = confirm('Are you shure that you want to delete this device?');\n    if (this._devices.has(name) && confirmQuestion === true) {\n      this._devices.delete(name);\n    } else {\n      throw new Error(`There is no such device in the list`);\n    }\n  }\n  deleteAllDevices() {\n    this._devices.clear();\n  }\n  showAllDevices() {\n    return this._devices;\n  }\n  showDeviceByName(name) {\n    return this._devices.get(name);\n  }\n}\n\nexport class SmartHouseRender {\n  constructor(smartHouse) {\n    this.smartHouse = smartHouse;\n    this.root = document.getElementById(\"root\");\n  }\n\n  render() {\n    const registerDevice = document.createElement(\"div\");\n\n    const select = document.createElement(\"select\");\n    select.setAttribute(\"id\", \"select\");\n    select.className = \"select\";\n    const devices = this.smartHouse._register;\n    const defaultOption = document.createElement(\"option\");\n    defaultOption.text = \"Choose your device\";\n    select.add(defaultOption, null);\n\n    for (const device of devices) {\n      const [name, Device] = device;\n      const option = document.createElement(\"option\");\n\n      option.value = Device.getDeviceName();\n      option.text = Device.getHumanizedName();\n      select.add(option, null);\n    }\n\n    const inputField = document.createElement(\"input\");\n    inputField.type = \"text\";\n    inputField.className = \"deviceNameInput\";\n    const buttonAddDevice = document.createElement(\"button\");\n    buttonAddDevice.innerHTML = \"Add Device\";\n    buttonAddDevice.className = \"addDeviceBtn\";\n\n    select.addEventListener(\"change\", () => {\n      const selectIndex = document.getElementById(\"select\").options\n        .selectedIndex;\n      inputField.value = \"\";\n      registerDevice.appendChild(inputField);\n      registerDevice.appendChild(buttonAddDevice);\n\n      if (selectIndex === 0) {\n        inputField.remove();\n        buttonAddDevice.remove();\n      }\n    });\n\n    buttonAddDevice.addEventListener(\"click\", () => {\n      const selectIndex = document.getElementById(\"select\").options\n        .selectedIndex;\n      const currentOption = document.getElementById(\"select\").options[\n        selectIndex\n      ].value;\n      const deviceName = inputField.value;\n      inputField.value = \"\";\n\n      switch (currentOption) {\n        case \"tv-set\":\n          const newTV = new Tv(deviceName);\n          this.smartHouse.addNewDevice(newTV);\n          const viewTV = new RenderTV(\n            newTV,\n            document.getElementById(\"root\"),\n            this.smartHouse\n          );\n          viewTV.render();\n          break;\n\n        case \"light\":\n          const newLight = new Light(deviceName);\n          this.smartHouse.addNewDevice(newLight);\n          break;\n\n        case \"air_conditioning\":\n          const newAirConditioning = new AirConditioning(deviceName);\n          this.smartHouse.addNewDevice(newAirConditioning);\n          const viewAC = new RenderAC(\n            newAirConditioning,\n            document.getElementById(\"root\"),\n            this.smartHouse\n          );\n          viewAC.render();\n          break;\n      }\n    });\n\n    registerDevice.appendChild(select);\n    this.root.appendChild(registerDevice);\n  }\n}\n"],"sourceRoot":""}