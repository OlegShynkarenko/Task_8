{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./components/Device/Device.js","webpack:///./components/Air Conditioning/AirConditioning.js","webpack:///./components/Tv/Tv.js","webpack:///./components/Light/Light.js","webpack:///./components/Tv/tv_view.js","webpack:///./src/index.js","webpack:///./components/Smart House/SmartHouse.js","webpack:///./components/UI Manager/UIManager.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Device","[object Object]","this","_name","_isEnabled","isEnabledStatus","AirConditioning_AirConditioning","config","super","_mode","assign","currentTemperature","minTemperature","maxTemperature","currentFanSpeed","minFanSpeed","maxFanSpeed","temperature","_currentTemperature","fanSpeed","_currentFanSpeed","currentMode","_currentMode","source","indexOf","_maxTemperature","_minTemperature","_maxFanSpeed","_minFanSpeed","Tv_Tv","_sources","_currentChannel","_minChannelValue","_maxChannelValue","_currentVolume","_minVolume","_maxVolume","currentSource","_currentSource","currentChannel","channel","currentVolume","Light_Light","currentColorTemperature","minColorTemperature","maxColorTemperature","currentBrightness","minBrightness","maxBrightness","type","_type","_currentColorTemperature","_minColorTemperature","_maxColorTemperature","_currentBrightness","_maxBrightness","_minBrightness","RenderTV","tv","rootElement","SmartHouse","_tv","_rootElement","tvContainer","document","createElement","className","tvControlsContainer","powerControls","tvVolumeControls","tvChannelControls","deviceName","innerText","getHumanizedName","state","switchState","setDeviceOn","innerHTML","addEventListener","setDeviceOff","decreaseVolume","increaseVolume","decreaseChannel","increaseChannel","deleteDeviceButton","deleteDeviceByName","showCurrentVolume","showCurrentChannel","appendChild","house","address","owner","_address","_owner","_devices","Map","_register","register","device","getDeviceName","set","has","Error","delete","clear","registerDevice","UI","root","getElementById","select","setAttribute","devices","defaultOption","text","add","option","inputField","buttonAddDevice","selectIndex","options","selectedIndex","remove","currentOption","newTV","addNewDevice","render","newLight","newAirConditioning","renderAvailableDevicesSelect","deviceSelectionHandler","window"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export class Device {\n  constructor(name) {\n    this._name = name;\n    this._isEnabled = false;\n  }\n  get name() {\n    return (this._name = name);\n  }\n\n  get isEnabledStatus() {\n    return this._isEnabled;\n  }\n\n  setDeviceOn() {\n    if (!this._isEnabled) {\n      this._isEnabled = true;\n    }\n  }\n  setDeviceOff() {\n    if (this._isEnabled) {\n      this._isEnabled = false;\n    }\n  }\n}\n","import { Device } from \"../Device/Device\";\n\nexport class AirConditioning extends Device {\n  constructor(name, config) {\n    super(name);\n    this._name = name;\n    this._mode = [\"COOL\", \"HEAT\", \"DRY\", \"FAN\"];\n    const defaultConfig = {\n      currentTemperature: 20,\n      minTemperature: 15,\n      maxTemperature: 30,\n      currentFanSpeed: 3,\n      minFanSpeed: 1,\n      maxFanSpeed: 5\n    };\n    this.config = Object.assign({}, defaultConfig, config);\n  }\n\n  static getDeviceName() {\n    //\n    return \"air_conditioning\";\n  }\n\n  static getHumanizedName() {\n    return \"Air Conditioning Device\";\n  }\n\n  getConfig() {\n    return this.config;\n  }\n\n  set currentTemperature(temperature) {\n    if (temperature < 10) {\n      this._currentTemperature = 10;\n\n      return;\n    }\n\n    this._currentTemperature = temperature;\n  }\n\n  get fanSpeed() {\n    return this._currentFanSpeed;\n  }\n\n  get currentMode() {\n    return this._currentMode;\n  }\n  setSource(source) {\n    if (this._mode.indexOf(source) !== -1) {\n      this._currentMode = source;\n    }\n  }\n\n  get currentTemperature() {\n    return this._currentTemperature;\n  }\n\n  increaseTemperature() {\n    if (this._currentTemperature < this._maxTemperature) {\n      this._currentTemperature++;\n    }\n  }\n  decreaseTemperature() {\n    if (this._currentTemperature > this._minTemperature) {\n      this._currentTemperature--;\n    }\n  }\n  get currentFanSpeed() {\n    return this._currentFanSpeed;\n  }\n  increaseFanSpeed() {\n    if (this._currentFanSpeed < this._maxFanSpeed) {\n      this._currentFanSpeed++;\n    }\n  }\n  decreaseTemperature() {\n    if (this._currentFanSpeed > this._minFanSpeed) {\n      this._currentFanSpeed--;\n    }\n  }\n}\n","import { Device } from \"../Device/Device\";\n\nexport class Tv extends Device {\n  constructor(name) {\n    super(name);\n    this._name = name;\n    this._sources = [\"TV antenna\", \"HDMI\", \"USB\", \"PC\"];\n    this._currentChannel = 1;\n    this._minChannelValue = 1;\n    this._maxChannelValue = 100;\n    this._currentVolume = 10;\n    this._minVolume = 0;\n    this._maxVolume = 50;\n  }\n\n  static getDeviceName() {\n    return \"tv-set\";\n  }\n\n  static getHumanizedName() {\n    return \"TV-Set Device\";\n  }\n\n  getHumanizedName() {\n    return \"TV-Set\";\n  }\n\n  get source() {\n    return this._sources;\n  }\n\n  get currentSource() {\n    return this._currentSource;\n  }\n  setSource(source) {\n    if (this._sources.indexOf(source) !== -1) {\n      this._currentSource = source;\n    }\n  }\n  get currentChannel() {\n    return this._currentChannel;\n  }\n  set currentChannel(channel) {\n    if (channel >= this._minChannelValue && channel <= this._maxChannelValue) {\n      this._currentChannel = channel;\n    }\n  }\n  increaseChannel() {\n    this._currentChannel++;\n    if (this._currentChannel > this._maxChannelValue) {\n      this._currentChannel = 1;\n    }\n  }\n  decreaseChannel() {\n    this._currentChannel--;\n    if (this._currentChannel < this._minChannelValue) {\n      this._currentChannel = 100;\n    }\n  }\n  get currentVolume() {\n    return this._currentVolume;\n  }\n\n  set currentVolume(value) {\n    if (value > this._minVolume && value < this._maxVolume) {\n      this._currentVolume = value;\n    }\n  }\n\n  increaseVolume() {\n    if (this._currentVolume < this._maxVolume) {\n      this._currentVolume++;\n    }\n  }\n  decreaseVolume() {\n    if (this._currentVolume > this._minVolume) {\n      this._currentVolume--;\n    }\n  }\n}\n","import { Device } from \"../Device/Device\";\n\nexport class Light extends Device {\n  constructor(name, config) {\n    super(name);\n    const defaultConfig = {\n      currentColorTemperature: 3000,\n      minColorTemperature: 2000,\n      maxColorTemperature: 6500,\n      currentBrightness: 5,\n      minBrightness: 1,\n      maxBrightness: 10\n    };\n    this.config = Object.assign({}, defaultConfig, config);\n  }\n\n  static getDeviceName() {\n    return \"light\";\n  }\n\n  static getHumanizedName() {\n    return \"Light Device\";\n  }\n\n  getConfig() {\n    return this.config;\n  }\n\n  get type() {\n    return this._type;\n  }\n  get currentColorTemperature() {\n    return this._currentColorTemperature;\n  }\n  get minColorTemperature() {\n    return this._minColorTemperature;\n  }\n  get maxColorTemperature() {\n    return this._maxColorTemperature;\n  }\n  increaseColorTemperature() {\n    if (this._currentColorTemperature < this._maxColorTemperature) {\n      this._currentColorTemperature++;\n    }\n  }\n  decreaseColorTemperature() {\n    if (this._currentColorTemperature > this._minColorTemperature) {\n      this._currentColorTemperature--;\n    }\n  }\n  get currentBrightness() {\n    return this._currentBrightness;\n  }\n  increaseBrightness() {\n    if (this._currentBrightness < this._maxBrightness) {\n      this._currentBrightness++;\n    }\n  }\n  decreaseBrightness() {\n    if (this._currentBrightness > this._minBrightness) {\n      this._currentBrightness--;\n    }\n  }\n  setNightMode() {\n    this._currentColorTemperature = 6500;\n    this._currentBrightness = 1;\n  }\n}\n","export class RenderTV {\n  constructor(tv, rootElement, SmartHouse) {\n    this._tv = tv;\n    this._rootElement = rootElement;\n    this.SmartHouse = SmartHouse;\n  }\n\n  render() {\n    const tvContainer = document.createElement(\"div\");\n    tvContainer.className = \"tv\";\n\n    const tvControlsContainer = document.createElement(\"div\");\n    tvControlsContainer.className = \"tv__controls\";\n\n    const powerControls = document.createElement(\"div\");\n    powerControls.className = \"tv__controls-power\";\n\n    const tvVolumeControls = document.createElement(\"div\");\n    tvVolumeControls.className = \"tv__controls-volume\";\n\n    const tvChannelControls = document.createElement(\"div\");\n    tvChannelControls.className = \"tv__controls-channel\";\n\n    let deviceName = document.createElement(\"div\");\n    deviceName.innerText = `Device name: ${\n      this._tv._name\n    } - ${this._tv.getHumanizedName()}`;\n\n    let state = document.createElement(\"div\");\n    state.className = \"stateField\";\n    let switchState = () => {\n      state.innerText = `Device status: ${\n        this._tv.isEnabledStatus ? \"On\" : \"Off\"\n      }`;\n    };\n\n    const setDeviceOn = document.createElement(\"button\");\n    setDeviceOn.className = \"tv__controls-power-on-btn button\";\n    setDeviceOn.type = \"button\";\n    setDeviceOn.innerHTML = \"ON\";\n    setDeviceOn.addEventListener(\"click\", () => {\n      this._tv.setDeviceOn();\n      switchState();\n    });\n\n    const setDeviceOff = document.createElement(\"button\");\n    setDeviceOff.className = \"tv__controls-power-off-btn button\";\n    setDeviceOff.type = \"button\";\n    setDeviceOff.innerHTML = \"OFF\";\n    setDeviceOff.addEventListener(\"click\", () => {\n      this._tv.setDeviceOff();\n      switchState();\n    });\n\n    let currentVolume = document.createElement(\"div\");\n    let showCurrentVolume = () => {\n      currentVolume.innerText = `Volume: ${this._tv.currentVolume}`;\n    };\n\n    const decreaseVolume = document.createElement(\"button\");\n    decreaseVolume.className = \"decrease_volume button\";\n    decreaseVolume.type = \"button\";\n    decreaseVolume.innerHTML = \" vol-\";\n    decreaseVolume.addEventListener(\"click\", () => {\n      if (this._tv.isEnabledStatus === true) {\n        this._tv.currentVolume = this._tv.decreaseVolume();\n        currentVolume.innerText = `Volume: ${this._tv.currentVolume}`;\n      }\n    });\n\n    const increaseVolume = document.createElement(\"button\");\n    increaseVolume.className = \"decrease_volume button\";\n    increaseVolume.type = \"button\";\n    increaseVolume.innerHTML = \"vol+\";\n    increaseVolume.addEventListener(\"click\", () => {\n      if (this._tv.isEnabledStatus === true) {\n        this._tv.currentVolume = this._tv.increaseVolume();\n        currentVolume.innerText = `Volume: ${this._tv.currentVolume}`;\n      }\n    });\n\n    let currentChannel = document.createElement(\"div\");\n    let showCurrentChannel = () => {\n      currentChannel.innerText = `Channel: ${this._tv.currentChannel}`;\n    };\n\n    const decreaseChannel = document.createElement(\"button\");\n    decreaseChannel.className = \"decrease_channel button\";\n    decreaseChannel.type = \"button\";\n    decreaseChannel.innerHTML = \"ch-\";\n    decreaseChannel.addEventListener(\"click\", () => {\n      if (this._tv.isEnabledStatus === true) {\n        this._tv.currentChannel = this._tv.decreaseChannel();\n        currentChannel.innerText = `Channel: ${this._tv.currentChannel}`;\n      }\n    });\n\n    const increaseChannel = document.createElement(\"button\");\n    increaseChannel.className = \"decrease_channel button\";\n    increaseChannel.type = \"button\";\n    increaseChannel.innerHTML = \"ch+\";\n    increaseChannel.addEventListener(\"click\", () => {\n      if (this._tv.isEnabledStatus === true) {\n        this._tv.currentChannel = this._tv.increaseChannel();\n        currentChannel.innerText = `Channel: ${this._tv.currentChannel}`;\n      }\n    });\n\n    const deleteDeviceButton = document.createElement('button');\n    deleteDeviceButton.className = 'delete_device';\n    deleteDeviceButton.innerHTML = 'Delete Device';\n    deleteDeviceButton.addEventListener('click', () => {\n      this.SmartHouse.deleteDeviceByName(this._tv._name);\n    });\n\n    switchState();\n    showCurrentVolume();\n    showCurrentChannel();\n    tvContainer.appendChild(deviceName);\n\n    powerControls.appendChild(state);\n    powerControls.appendChild(setDeviceOn);\n    powerControls.appendChild(setDeviceOff);\n\n    tvVolumeControls.appendChild(currentVolume);\n    tvVolumeControls.appendChild(decreaseVolume);\n    tvVolumeControls.appendChild(increaseVolume);\n\n    tvChannelControls.appendChild(currentChannel);\n    tvChannelControls.appendChild(decreaseChannel);\n    tvChannelControls.appendChild(increaseChannel);\n\n    tvControlsContainer.appendChild(powerControls);\n    tvControlsContainer.appendChild(tvVolumeControls);\n    tvControlsContainer.appendChild(tvChannelControls);\n\n    tvContainer.appendChild(tvControlsContainer);\n    tvContainer.appendChild(deleteDeviceButton);\n\n    this._rootElement.appendChild(tvContainer);\n  }\n}\n\n/*const deleteDeviceButton = document.createElement('button');\n    deleteDeviceButton.className = 'delete_device';\n    deleteDeviceButton.innerHTML = 'Delete Device';\n    deleteDeviceButton.addEventListener('click', () => {\n      this.SmartHouse.deleteDeviceByName(this._tv._name);\n      ///if (this.SmartHouse._devices.has(this._tv._name)) {}\n    });*/\n\n/*tvContainer.appendChild(deleteDeviceButton);*/\n","import { SmartHouse } from \"../components/Smart House/SmartHouse\";\nimport { Device } from \"../components/Device/Device\";\nimport { AirConditioning } from \"../components/Air Conditioning/AirConditioning\";\nimport { Tv } from \"../components/Tv/Tv\";\nimport { Light } from \"../components/Light/Light\";\nimport \"./index.scss\";\nimport { RenderTV } from \"../components/Tv/tv_view\";\nimport { UIManager } from \"../components/UI Manager/UIManager\";\n\nconst house = new SmartHouse(\"my house\", \"NY, 5th AV\", \"Oleg Shynkarenko\");\nhouse.registerDevice(Tv);\nhouse.registerDevice(Light);\nhouse.registerDevice(AirConditioning);\n\nconst UI = new UIManager(house);\nUI.renderAvailableDevicesSelect();\nUI.deviceSelectionHandler();\n\nwindow.house = house;\n/*const tv = new Tv('LG');\nconst view = new RenderTV(tv, document.getElementById('root'));\nwindow.tv = tv;\nwindow.view = view;\nview.render();*/\n","export class SmartHouse {\n  constructor(name, address, owner) {\n    this._name = name;\n    this._address = address;\n    this._owner = owner;\n    this._devices = new Map();\n    this._register = new Map();\n  }\n\n  get name() {\n    return this._name;\n  }\n  get address() {\n    return this._address;\n  }\n  get owner() {\n    return this._owner;\n  }\n\n  get register() {\n    return this._register;\n  }\n\n  registerDevice(device) {\n    // Get Class like Light / Tv / AirConditioning\n    const name = device.getDeviceName();\n    this._register.set(name, device);\n  }\n\n  addNewDevice(device) {\n    if (this._devices.has(device._name) === false && device._name) {\n      this._devices.set(device._name, device);\n    } else {\n      throw new Error(\n        `This device has been already added or you didn't enter device name.`\n      );\n    }\n  }\n  deleteDeviceByName(name) {\n    if (this._devices.has(name)) {\n      this._devices.delete(name);\n    } else {\n      throw new Error(`There is no such device in the list`);\n    }\n  }\n  deleteAllDevices() {\n    this._devices.clear();\n  }\n  showAllDevices() {\n    return this._devices;\n  }\n  showDeviceByName(name) {\n    return this._devices.get(name);\n  }\n}\n","import { SmartHouse } from \"../Smart House/SmartHouse\";\nimport { Tv } from \"../Tv/Tv\";\nimport { Light } from \"../Light/Light\";\nimport { AirConditioning } from \"../Air Conditioning/AirConditioning\";\nimport { RenderTV } from \"../Tv/tv_view\";\n\nexport class UIManager {\n  constructor(SmartHouse) {\n    this.SmartHouse = SmartHouse;\n    this.root = document.getElementById(\"root\");\n  }\n\n  renderAvailableDevicesSelect() {\n    const select = document.createElement(\"select\");\n    select.setAttribute(\"id\", \"select\");\n    select.className = \"select\";\n    const devices = this.SmartHouse._register;\n    const defaultOption = document.createElement(\"option\");\n    defaultOption.text = \"Choose your device\";\n    select.add(defaultOption, null);\n\n    for (const device of devices) {\n      const [name, Device] = device;\n      const option = document.createElement(\"option\");\n\n      option.value = Device.getDeviceName();\n      option.text = Device.getHumanizedName();\n      select.add(option, null);\n    }\n\n    this.root.appendChild(select);\n  }\n\n  deviceSelectionHandler() {\n    const inputField = document.createElement(\"input\");\n    inputField.type = \"text\";\n    inputField.className = \"deviceNameInput\";\n    const buttonAddDevice = document.createElement(\"button\");\n    buttonAddDevice.innerHTML = \"Add Device\";\n    buttonAddDevice.className = \"addDeviceBtn\";\n\n    select.addEventListener(\"change\", () => {\n      const selectIndex = document.getElementById(\"select\").options\n        .selectedIndex;\n      inputField.value = \"\";\n      this.root.appendChild(inputField);\n      this.root.appendChild(buttonAddDevice);\n\n      if (selectIndex === 0) {\n        inputField.remove();\n        buttonAddDevice.remove();\n      }\n    });\n\n    buttonAddDevice.addEventListener(\"click\", () => {\n      const selectIndex = document.getElementById(\"select\").options\n        .selectedIndex;\n      const currentOption = document.getElementById(\"select\").options[\n        selectIndex\n      ].value;\n      const deviceName = inputField.value;\n\n      switch (currentOption) {\n        case \"tv-set\":\n          const newTV = new Tv(deviceName);\n          this.SmartHouse.addNewDevice(newTV);\n          const view = new RenderTV(newTV, document.getElementById(\"root\"));\n          view.render();\n          break;\n\n        case \"light\":\n          const newLight = new Light(deviceName);\n          this.SmartHouse.addNewDevice(newLight);\n          break;\n\n        case \"air_conditioning\":\n          const newAirConditioning = new AirConditioning(deviceName);\n          this.SmartHouse.addNewDevice(newAirConditioning);\n      }\n    });\n  }\n\n\n  /*handleAddDevice() {\n        listen click on button and add device\n        this.SmartHouse.addNewDevice(...)\n    }*/\n}\n"],"sourceRoot":""}